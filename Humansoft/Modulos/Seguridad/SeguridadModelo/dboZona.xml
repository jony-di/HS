<?xml version="1.0" encoding="iso-8859-1" ?>
<Secciones>
    <Zona>
    <obtenerSiguienteClave>
        <sql>
BEGIN
	SET NOCOUNT ON;	
	DECLARE @siguiente AS INT;
	SELECT ISNULL(MAX(cve_zona),0) + 1 clave FROM SG_Zona;
END
        </sql>   
    </obtenerSiguienteClave>
    
    <Nuevo>
        <campo leyenda="Clave" db_nombre="cve_zona" form_nombre="cve_zona" requerido="true" charsize="0" tipo="int" default=""/>
        <campo leyenda="Clave" db_nombre="cve_region" form_nombre="cve_region" requerido="true" charsize="0" tipo="int" default=""/>
        <campo leyenda="Nombre" db_nombre="nombre" form_nombre="nombre"  requerido="true" charsize="150" tipo="string" default=""/>
        <campo leyenda="Activo" db_nombre="activo" form_nombre="activo"  requerido="true" charsize="50" tipo="bool" default="true"/>       
        <sql>
BEGIN
	SET NOCOUNT ON;	
	BEGIN TRY
		INSERT INTO SG_Zona(
			cve_zona,
			cve_region,
			nombre,
			activo
		)
		VALUES(
			@cve_zona,
			@cve_region,
			@nombre,
			@activo
		)
		SELECT 1  estatus, 'Registro guardado correctamente' mensaje;
	END TRY BEGIN CATCH	
		SELECT -1 AS estatus,  'Error: ' + ERROR_MESSAGE() mensaje;
	END CATCH	
END

        </sql>
   </Nuevo>
        
   <obtenerCatalogo>
        <campo leyenda="Página" db_nombre="pagina" form_nombre="pagina" requerido="true" charsize="0" tipo="int" default=""/>
        <campo leyenda="Longitud de página" db_nombre="longitudPagina" form_nombre="longitudPagina"  requerido="true" charsize="0" tipo="int" default=""/>
        <campo leyenda="Criterio" db_nombre="criterio" form_nombre="criterio"  requerido="false"  charsize="200" tipo="string"  default=""/>
        <campo leyenda="Clave" db_nombre="cve_zona" form_nombre="cve_zona"  requerido="false"  charsize="0" tipo="int"  default=""/>
        <sql>
            BEGIN
            SET NOCOUNT ON;
            DECLARE @inicio INT;
            SET @inicio= (@pagina-1)*@longitudPagina;--Pagina debe ser mayor que 0;
            DECLARE @TablaAuxiliarPaginacion AS TABLE(
            indiceRegistro INT,
            cve_zona SMALLINT,
            cve_region SMALLINT,
            region VARCHAR(80),
            nombre VARCHAR(80),
            activo BIT
            )
            INSERT INTO @TablaAuxiliarPaginacion
            SELECT
            ROW_NUMBER() OVER(ORDER BY CONVERT(INT,cve_zona) DESC) AS indiceRegistro,
            A.cve_zona,
            A.cve_region,
            B.nombre AS region,
            A.nombre,
            A.activo
            FROM
            SG_Zona	A INNER JOIN SG_region B ON A.cve_region=B.cve_region
            WHERE ( ((CONVERT(VARCHAR(20),A.cve_zona) like '%' + @criterio + '%') OR (A.nombre like '%' + @criterio + '%') OR (B.nombre like '%' + @criterio + '%')or (CASE WHEN(A.activo=1) THEN 'activo' ELSE 'inactivo' END like @criterio )) AND @cve_zona=0)
            OR ((A.cve_zona=@cve_zona) AND (@cve_zona !=0));
            --Paginacion
            SELECT TOP(@longitudPagina)
            indiceRegistro,
            @@ROWCOUNT as totalRegistros,
            cve_zona,
            region,
            cve_region,
            nombre,
            activo
            FROM @TablaAuxiliarPaginacion
            WHERE indiceRegistro > @inicio
            ORDER BY indiceRegistro ASC
            END
        </sql>        
    </obtenerCatalogo>

     <Editar>
         <campo leyenda="Clave" db_nombre="cve_zona" form_nombre="cve_zona" requerido="true" charsize="0" tipo="int" default=""/>
         <campo leyenda="Clave" db_nombre="cve_region" form_nombre="cve_region" requerido="true" charsize="0" tipo="int" default=""/>
         <campo leyenda="Nombre" db_nombre="nombre" form_nombre="nombre"  requerido="true" charsize="150" tipo="string" default=""/>
         <campo leyenda="Activo" db_nombre="activo" form_nombre="activo"  requerido="true" charsize="50" tipo="bool" default="true"/>
        <sql>
BEGIN
	SET NOCOUNT ON;	
	BEGIN TRY
		UPDATE SG_Zona 
		SET			
			cve_zona=@cve_zona,
			cve_region=@cve_region,
			nombre=@nombre,
			activo=@activo
		WHERE cve_zona= @cve_zona
		SELECT 1  estatus, 'Registro actualizado correctamente' mensaje;
	END TRY BEGIN CATCH	
		SELECT -1 AS estatus,  'Error: ' + ERROR_MESSAGE() mensaje;
	END CATCH	
END

        </sql>
    </Editar>
</Zona>  
</Secciones>  
    
    
    
    

